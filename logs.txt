{ repo: 'jquery/sizzle',
  id: 58844668,
  number: 318,
  title: 'Sizzle.matches not passing enough vars to condense function',
  user: { id: 4896982, login: 'mmclau14' },
  created_at: '2015-02-25T03:23:40Z',
  updated_at: '2015-02-25T14:49:56Z',
  body: 'I used the sizzle library to filter a list of elements by :even. It looks like it did so correctly until it tried to condense the array that it had. Only one argument was passed when it needs at least 2.\r\n\r\nEDIT:\r\nthe error occurs at this line in the condense function \r\n```javascript\r\nmap.push(i);\r\n```',
  type: 1,
  state: 'open' }
{ repo: 'jquery/sizzle',
  id: 60504417,
  number: 322,
  title: 'Class Selector in SVG Elements (IE)',
  user: { id: 5517677, login: 'ColinFrick' },
  created_at: '2015-03-10T14:08:00Z',
  updated_at: '2015-03-10T14:18:43Z',
  body: 'After upgrading jQuery from version 1.11.0 to 1.11.2 class selectors in SVG elements are not working anymore. That\'s because before the commit 08cb4519b079af502e0441857bc3c01d31030545 it was checked if getElementsByClassname is available on the element (context). In Internet Explorer getElementsByClassName is available on the document, but not on SVG Elements.\r\n\r\nSo following test would fail with "Object doesn\'t support property or method getElementsByClassName"\r\n```javascript\r\n\tdiv = jQuery("<svg width=\'200\' height=\'250\' version=\'1.1\' xmlns=\'http://www.w3.org/2000/svg\'><rect x=\'10\' y=\'10\' width=\'30\' height=\'30\' class=\'foo\'></rect></svg>")[0];\r\n\tequal( Sizzle(".foo", div).length, 1, "Class selector against SVG" );\r\n```\r\n\r\nAny way I could work around this problem?',
  type: 1,
  state: 'open' }
{ repo: 'jquery/sizzle',
  id: 63850386,
  number: 326,
  title: 'Syntax error unclear',
  user: { id: 285352, login: 'treyhunner' },
  created_at: '2015-03-23T22:37:45Z',
  updated_at: '2015-03-25T15:57:02Z',
  body: 'We ran some front-end tests and saw the error:\r\n\r\n    Syntax error, unrecognized expression: #\r\n\r\nWe dug for a while looking for a stray `#` in our code before searching the internet deep enough to realize this was an invalid jQuery selector.\r\n\r\nThis error message would be more clear if it mentioned "sizzle", "jQuery", "selector", or another string that would make it clear to the user that this is *not* a JavaScript syntax error, but a sizzle selector expression syntax error.',
  type: 1,
  state: 'open' }
{ repo: 'jquery/sizzle',
  id: 60200499,
  number: 320,
  title: 'Sizzle throws exception when id selector has a leading dot',
  user: { id: 835857, login: 'FagnerMartinsBrack' },
  created_at: '2015-03-07T10:16:07Z',
  updated_at: '2015-03-07T14:29:25Z',
  body: 'Example:\r\n\r\n```javascript\r\n// Syntax error, unrecognized expression: #.\r\nSizzle( "#." );\r\n```\r\n\r\n**Real use case**\r\n\r\n[AddThis](http://support.addthis.com/customer/portal/articles/381252-click-tracking) uses a click tracking mechanism that uses the hashbang to detect sharing.\r\nIt is expected that when you lookup a hashbang for a DOM element it just fails silently if the element is not found:\r\n\r\n```javascript\r\n$( "#" + window.location.hash.replace( /^#\\/?/, "" ) );\r\n```\r\n\r\nBut if you use AddThis, it adds the following hashbang in the url:\r\n\r\n```\r\nhttp://localhost/page#.VPrIoGTO1W4.facebook\r\n```\r\n\r\nNotice the leading dot. In this case the code will throw an exception instead of returning zero elements because of the dot in the beginning.',
  type: 2,
  state: 'closed',
  closed_at: '2015-03-07T13:49:34Z',
  closed_by: { id: 192451, login: 'timmywil' } }
{ repo: 'jquery/sizzle',
  id: 55699360,
  number: 314,
  title: 'Browserstack and android devices',
  user: { id: 945528, login: 'markelog' },
  created_at: '2015-01-28T01:01:02Z',
  updated_at: '2015-01-29T21:27:26Z',
  body: 'Currently build fails on all android devices, see more info in travis builds - https://travis-ci.org/jquery/sizzle/builds\r\n\r\nBrowsertack is notified.\r\n\r\nI purpose to temporary disable to run tests on them until browserstack figure out the problem.\r\n\r\n/cc @mzgol \r\n',
  type: 1,
  state: 'open' }
{ repo: 'jquery/sizzle',
  id: 55355141,
  number: 312,
  title: 'Consider renaming shadowed document variable',
  user: { id: 260792, login: 'catrope' },
  created_at: '2015-01-24T02:09:36Z',
  updated_at: '2015-01-26T18:20:51Z',
  body: 'Figuring out what this code does was a fun exercise:\r\n\r\n```\r\nif ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {\r\n```\r\n\r\nIt turns out that `document` is **not** the global document (`window.document`), instead it\'s a local variable that contains the most recently used document (set by `setDocument()`). My IDE helps confuse me by highlighting `document` in a special color. But there *is* a variable for the global document and it is in this expression, it\'s called `preferredDoc`.\r\n\r\nUsing shadowing to create a local variable called `document` that sometimes is and sometimes isn\'t equal to the global variable called `document`, and then creating a different local variable (`preferredDoc`) that is always equal to the global variable called `document` is terribly confusing. Reading a line of code like the one I quoted in isolation gives the impression that it does the opposite of what it actually does.',
  type: 2,
  state: 'closed',
  closed_at: '2015-01-26T18:20:51Z',
  closed_by: { id: 192451, login: 'timmywil' } }
{ repo: 'jquery/sizzle',
  id: 55354812,
  number: 311,
  title: 'Sizzle.matches passes null context, causes document to be set to global document',
  user: { id: 260792, login: 'catrope' },
  created_at: '2015-01-24T02:00:03Z',
  updated_at: '2015-03-02T16:24:20Z',
  body: 'Related to #292 \r\n\r\nIf you call, say, `$foo.children( \'a\' )` , checking which children of `$foo` match the `\'a\'` selector is done by `jQuery.filter`. If `$foo` has exactly one child, `jQuery.filter` will call `Sizzle.matchesSelector` which invokes `setDocument( elem.ownerDocument )` if necessary, and then passes that document to the `Sizzle` constructor.\r\n\r\nHowever, if the number of children of `$foo` isn\'t exactly one, `jQuery.filter` will call `Sizzle.matches` instead, which just calls the `Sizzle` constructor directly, passing in `null` for the context, causing an invocation of `setDocument( window.document )` regardless of what document `$foo` is really in.\r\n\r\nThis means that the following code causes the document context to thrash: `setDocument` is invoked from every `.children()` call, which is detrimental to performance, since `setDocument` contains 300+ lines of feature/bug detection code.\r\n\r\n```\r\nvar doc = document.implementation.createHTMLDocument( \'\' ),\r\n    $foo = $( \'<p><b>Hi</b></p>\', doc ),\r\n    $bar = $( \'<p><b>Hello</b><i>world</i></p>\', doc ),\r\n    $baz = $( \'<p>\', doc );\r\n\r\n// Context is doc due to $( \'....\', doc ) above\r\n$baz.children( \'b\' ); // Sets context to window.document\r\n$foo.children( \'b\' ); // Sets context to doc\r\n$bar.children( \'b\' ); // Sets context to window.document\r\n$foo.children( \'i\' ); // Sets context to doc\r\n$bar.children( \'i\' ); // Sets context to window.document\r\n```',
  type: 2,
  state: 'closed',
  closed_at: '2015-03-02T16:24:20Z',
  closed_by: { id: 192451, login: 'timmywil' } }
{ repo: 'jquery/sizzle',
  id: 56569501,
  number: 316,
  title: 'Limit framed setDocument teardown listeners to IE',
  user: { id: 1199584, login: 'gibson042' },
  created_at: '2015-02-04T18:46:53Z',
  updated_at: '2015-03-23T15:34:01Z',
  body: 'e.g., `parent !== parent.top && document.documentMode`\r\n\r\nRef https://github.com/jquery/jquery/issues/1772#issuecomment-72877984\r\nRef 36973e9340b9e072a2077125cfc442dc6a42b926',
  type: 2,
  state: 'closed',
  closed_at: '2015-03-23T15:34:01Z',
  closed_by: { id: 192451, login: 'timmywil' } }
{ repo: 'jquery/sizzle',
  id: 53439212,
  number: 309,
  title: 'Sizzle.attr assumes passes element supports getAttribute',
  user: { id: 188701, login: 'ayush' },
  created_at: '2015-01-05T20:19:19Z',
  updated_at: '2015-01-06T00:36:35Z',
  body: 'Inside `Sizzle.attr` [there is an assumption](https://github.com/jquery/sizzle/blob/master/src/sizzle.js#L894) that the passed `elem` supports `getAttributes`. This isn\'t always true. As an example, the Comment element does not support this method. \r\n\r\nThis leads to errors such as those reported [here](http://stackoverflow.com/questions/27408501/ng-repeat-sorting-is-throwing-an-exception-in-jquery) or [here](http://stackoverflow.com/questions/26808658/backbone-view-jquery-sizzle-error) \r\n\r\nThe fix is to check if `elem` supports `getAttribute`. A condition like `elem.getAttribute !== undefined` should do the trick.\r\n\r\n',
  type: 2,
  state: 'closed',
  closed_at: '2015-01-05T20:52:47Z',
  closed_by: { id: 1199584, login: 'gibson042' } }
{ repo: 'jquery/sizzle',
  id: 56432954,
  number: 315,
  title: 'Check existing selector cache and skip matchesSelector when possible',
  user: { id: 192451, login: 'timmywil' },
  created_at: '2015-02-03T20:33:44Z',
  updated_at: '2015-02-13T22:42:47Z',
  body: 'For context: https://github.com/jquery/jquery/issues/2042#issuecomment-72469549\r\n\r\nThis should improve performance of selector extensions when called multiple times. When making this change, let\'s record some performance metrics for the release notes!',
  type: 2,
  state: 'closed',
  closed_at: '2015-02-13T22:27:34Z',
  closed_by: { id: 192451, login: 'timmywil' } }
{ repo: 'jquery/sizzle',
  id: 53317830,
  number: 308,
  title: 'Automate updating AUTHORS.txt before release',
  user: { id: 1758366, login: 'mzgol' },
  created_at: '2015-01-03T22:47:47Z',
  updated_at: '2015-01-04T20:22:42Z',
  body: 'Our [AUTHORS.txt](https://github.com/jquery/sizzle/blob/master/AUTHORS.txt) file is terribly outdated, even @markelog isn\'t on the list. We should automate populating it, at least before releases.',
  type: 1,
  state: 'open' }
{ repo: 'jquery/sizzle',
  id: 54528625,
  number: 310,
  title: 'Expose Sizzle.expando so jQuery can clear it for IE8 cloning',
  user: { id: 157858, login: 'dmethvin' },
  created_at: '2015-01-16T01:18:20Z',
  updated_at: '2015-02-14T23:30:34Z',
  body: 'Per discussion in https://github.com/jquery/jquery/issues/1709 and https://github.com/jquery/jquery/pull/1652 .',
  type: 2,
  state: 'closed',
  closed_at: '2015-02-13T17:25:24Z',
  closed_by: { id: 945528, login: 'markelog' } }
